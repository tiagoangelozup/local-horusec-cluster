apiVersion: install.horusec.io/v2alpha1
kind: HorusecPlatform
metadata:
  name: simplest
  namespace: "${NAMESPACE}"
spec:
  components:
    analytic:
      database:
        host: "${POSTGRESQL_HOST}"
        name: analytic_db
        password:
          secretKeyRef:
            key: postgresql-password
            name: "${ANALYTIC_DB_SECRET_NAME}"
        user:
          secretKeyRef:
            key: postgresql-username
            name: "${ANALYTIC_DB_SECRET_NAME}"
      ingress:
        host: analytic-7f000001.nip.io
    api:
      ingress:
        host: api-7f000001.nip.io
    auth:
      ingress:
        host: auth-7f000001.nip.io
    core:
      ingress:
        host: core-7f000001.nip.io
    manager:
      ingress:
        host: manager-7f000001.nip.io
    messages:
      container:
        livenessProbe:
          timeoutSeconds: 3
        readinessProbe:
          timeoutSeconds: 3
      enabled: true
      ingress:
        host: messages-7f000001.nip.io
      mailServer:
        host: smtp.mailtrap.io
        password:
          secretKeyRef:
            key: password
            name: "${SMTP_SECRET_NAME}"
        port: 2525
        user:
          secretKeyRef:
            key: username
            name: "${SMTP_SECRET_NAME}"
    vulnerability:
      ingress:
        host: vulnerability-7f000001.nip.io
    webhook:
      ingress:
        host: webhook-7f000001.nip.io
  global:
    broker:
      host: "${RABBITMQ_HOST}"
      password:
        secretKeyRef:
          key: password
          name: "${RABBITMQ_SECRET_NAME}"
      user:
        secretKeyRef:
          key: username
          name: "${RABBITMQ_SECRET_NAME}"
    database:
      host: "${POSTGRESQL_HOST}"
      password:
        secretKeyRef:
          key: postgresql-password
          name: "${PLATFORM_DB_SECRET_NAME}"
      user:
        secretKeyRef:
          key: postgresql-username
          name: "${PLATFORM_DB_SECRET_NAME}"
    jwt:
      secretKeyRef:
        key: secret-key
        name: "${JWT_SECRET_NAME}"
